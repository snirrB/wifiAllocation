{
    "openapi": "3.1.0",
    "info": {
        "title": "FastAPI",
        "version": "0.1.0"
    },
    "paths": {
        "/status": {
            "get": {
                "summary": "Get Status",
                "description": "Receive the status of the db",
                "operationId": "get_status_status_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/logout/premium_user/{email}": {
            "post": {
                "summary": "Logout User",
                "description": "Gets an email of an existing premium user and deactivate it in the db\n:param email: The email of the user to disconnect\n:param session: The engine session object\n:return:",
                "operationId": "logout_user_logout_premium_user__email__post",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Email"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/login/premium/": {
            "get": {
                "summary": "Login Premium User",
                "description": "Receive a dict holding the data of a premium user trying to log in, assert that it is a valid user, and behave\naccordingly\n:param user_to_login: The data of the user trying to log in\n:param session: The engine session object\n:return:",
                "operationId": "login_premium_user_login_premium__get",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "title": "User To Login"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IPremiumUserRead"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/add_premium_user": {
            "post": {
                "summary": "Add Premium User",
                "description": "Receive the details of a new user and add it to the db\n:param user_to_add: IUserCreate schema holding a user to add\n:param session: The session engine object\n:return: IUserRead object holding the details of the new created user",
                "operationId": "add_premium_user_add_premium_user_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "title": "User To Add"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/IPremiumUserRead"
                                        },
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "Response Add Premium User Add Premium User Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/login/free/": {
            "get": {
                "summary": "Create New Free User",
                "description": "Creates a new free user and stores it in the db\n:param token: The token received from the no dog\n:param session: The engine session",
                "operationId": "create_new_free_user_login_free__get",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user_status": {
            "get": {
                "summary": "Get User Status",
                "description": "Get current status for a user",
                "operationId": "get_user_status_user_status_get",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "total_avg_spd": {
            "get": {
                "summary": "Get Server Avg Speed",
                "description": "Return the average speed of the server",
                "operationId": "get_server_avg_speedtotal_avg_spd_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/db/delete_premium_user": {
            "delete": {
                "summary": "Delete Premium User",
                "operationId": "delete_premium_user_db_delete_premium_user_delete",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "title": "User"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "IPremiumUserRead": {
                "properties": {
                    "id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Id"
                    },
                    "token": {
                        "type": "string",
                        "title": "Token"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    }
                },
                "type": "object",
                "required": [
                    "token",
                    "email"
                ],
                "title": "IPremiumUserRead",
                "description": "The read object of Premium user"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            }
        }
    }
}